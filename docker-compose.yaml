services:
  mage:
    image: mage_demo
    container_name: mage 
    restart: unless-stopped
    ports:
      - "6789:6789"
    volumes:
      - .:/home/mage_code
      - mage_data:/home/src/.mage
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      SEARXNG_URL: http://searxng:8080
      MAGE_DATABASE_CONNECTION_URL: sqlite:////home/src/.mage/mage.db
    networks:
      - app_network      
    depends_on:
      - minio
      - qdrant
      - postgres  
      - searxng
  
  minio:
    container_name: minio
    image: quay.io/minio/minio
    restart: unless-stopped
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - './minio_data:/data'
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server --console-address ":9001" /data
    networks:
      - app_network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT_ALLOW_RECOVERY_MODE=true
    networks:
      - app_network

  postgres:
    image: postgres:14
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_ACCESS_KEY}
      POSTGRES_PASSWORD: ${POSTGRES_ACCESS_KEY}
      POSTGRES_DB: mage
      POSTGRES_MULTIPLE_DATABASES: test, metabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    restart: unless-stopped
    ports:
      - "12345:3000"
    networks:
      - app_network

volumes:
  minio_data:
  qdrant_data:
  postgres_data:
  mage_data:
  metabase_data:

networks:
  app_network:
    driver: bridge